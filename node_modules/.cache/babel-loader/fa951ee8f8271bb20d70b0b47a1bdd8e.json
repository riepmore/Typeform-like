{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pierremore/work/DeepOR/typeform-like/src/components/NameField.js\",\n    _s = $RefreshSig$();\n\nimport { TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nconst NameField = ({\n  name,\n  setName,\n  error\n}) => {\n  _s();\n\n  const [value, setValue] = useState();\n  setValue(name);\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    id: \"nameField\",\n    label: \"Nom\",\n    error: error,\n    value: value,\n    onChange: event => setName(event.target.value),\n    helperText: error && \"Ne doit contenir que des caractères alphabétiques !\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NameField, \"hWRfrSP8yP0Yit5gONTVsURNXRY=\");\n\n_c = NameField;\nexport default NameField;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameField\");","map":{"version":3,"sources":["/Users/pierremore/work/DeepOR/typeform-like/src/components/NameField.js"],"names":["TextField","React","useState","NameField","name","setName","error","value","setValue","event","target"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA8B;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AAEAM,EAAAA,QAAQ,CAACJ,IAAD,CAAR;AAEA,sBACI,QAAC,SAAD;AACI,IAAA,EAAE,EAAC,WADP;AAEI,IAAA,KAAK,EAAC,KAFV;AAGI,IAAA,KAAK,EAAEE,KAHX;AAII,IAAA,KAAK,EAAEC,KAJX;AAKI,IAAA,QAAQ,EAAGE,KAAD,IAAWJ,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaH,KAAd,CALhC;AAMI,IAAA,UAAU,EACND,KAAK,IACL;AARR;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlBD;;GAAMH,S;;KAAAA,S;AAoBN,eAAeA,SAAf","sourcesContent":["import { TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nconst NameField = ({ name, setName, error }) => {\n    const [value, setValue] = useState();\n\n    setValue(name);\n\n    return (\n        <TextField\n            id=\"nameField\"\n            label=\"Nom\"\n            error={error}\n            value={value}\n            onChange={(event) => setName(event.target.value)}\n            helperText={\n                error &&\n                \"Ne doit contenir que des caractères alphabétiques !\"\n            }\n        />\n    );\n}\n\nexport default NameField;"]},"metadata":{},"sourceType":"module"}