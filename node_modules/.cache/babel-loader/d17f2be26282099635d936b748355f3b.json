{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pierremore/work/DeepOR/typeform-like/src/components/StepperList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel'; // import Button from '@material-ui/core/Button';\n// import Typography from '@material-ui/core/Typography';\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         width: '100%',\n//     },\n//     backButton: {\n//         marginRight: theme.spacing(1),\n//     },\n//     instructions: {\n//         marginTop: theme.spacing(1),\n//         marginBottom: theme.spacing(1),\n//     },\n// }));\n\nconst getSteps = () => {\n  return ['Step A', 'Step B', 'Step C', 'Step D'];\n}; // const getStepContent = (stepIndex) => {\n//     switch (stepIndex) {\n//         case 0:\n//             return 'Select campaign settings...';\n//         case 1:\n//             return 'What is an ad group anyways?';\n//         case 2:\n//             return 'This is the bit I really care about!';\n//         default:\n//             return 'Unknown stepIndex';\n//     }\n// }\n\n\nconst StepperList = () => {\n  _s();\n\n  // const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps(); // const handleNext = () => {\n  //     setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  // };\n  // const handleBack = () => {\n  //     setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  // };\n  // const handleReset = () => {\n  //     setActiveStep(0);\n  // };\n\n  return (\n    /*#__PURE__*/\n    // <div className={classes.root}>\n    _jsxDEV(Stepper, {\n      activeStep: activeStep,\n      alternativeLabel: true,\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) // {/* <div>\n    //     {activeStep === steps.length ? (\n    //         <div>\n    //             <Typography className={classes.instructions}>All steps completed</Typography>\n    //             <Button onClick={handleReset}>Reset</Button>\n    //         </div>\n    //     ) : (\n    //             <div>\n    //                 <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n    //                 <div>\n    //                     <Button\n    //                         disabled={activeStep === 0}\n    //                         onClick={handleBack}\n    //                         className={classes.backButton}\n    //                     >\n    //                         Back\n    //                     </Button>\n    //                     <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n    //                         {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n    //                     </Button>\n    //                 </div>\n    //             </div>\n    //         )}\n    // </div> */}\n    // {/* </div> */}\n\n  );\n};\n\n_s(StepperList, \"cJXWosTT0XUh3gGn3cCcv/Y+Hws=\");\n\n_c = StepperList;\nexport default StepperList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepperList\");","map":{"version":3,"sources":["/Users/pierremore/work/DeepOR/typeform-like/src/components/StepperList.js"],"names":["React","Stepper","Step","StepLabel","getSteps","StepperList","activeStep","setActiveStep","useState","steps","map","label"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,SAAO,CAAC,QAAD,EACH,QADG,EAEH,QAFG,EAGH,QAHG,CAAP;AAIH,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAApC;AACA,QAAMC,KAAK,GAAGL,QAAQ,EAAtB,CAHsB,CAKtB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAAA;AACI;AACI,YAAC,OAAD;AAAS,MAAA,UAAU,EAAEE,UAArB;AAAiC,MAAA,gBAAgB,MAAjD;AAAA,gBACKG,KAAK,CAACC,GAAN,CAAWC,KAAD,iBACP,QAAC,IAAD;AAAA,+BACI,QAAC,SAAD;AAAA,oBAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,SAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFR,CASQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;;AAjCJ;AAmCH,CApDD;;GAAMN,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n// import Button from '@material-ui/core/Button';\n// import Typography from '@material-ui/core/Typography';\n\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         width: '100%',\n//     },\n//     backButton: {\n//         marginRight: theme.spacing(1),\n//     },\n//     instructions: {\n//         marginTop: theme.spacing(1),\n//         marginBottom: theme.spacing(1),\n//     },\n// }));\n\nconst getSteps = () => {\n    return ['Step A',\n        'Step B',\n        'Step C',\n        'Step D'];\n}\n\n// const getStepContent = (stepIndex) => {\n//     switch (stepIndex) {\n//         case 0:\n//             return 'Select campaign settings...';\n//         case 1:\n//             return 'What is an ad group anyways?';\n//         case 2:\n//             return 'This is the bit I really care about!';\n//         default:\n//             return 'Unknown stepIndex';\n//     }\n// }\n\nconst StepperList = () => {\n    // const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    // const handleNext = () => {\n    //     setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    // };\n\n    // const handleBack = () => {\n    //     setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    // };\n\n    // const handleReset = () => {\n    //     setActiveStep(0);\n    // };\n\n    return (\n        // <div className={classes.root}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            // {/* <div>\n            //     {activeStep === steps.length ? (\n            //         <div>\n            //             <Typography className={classes.instructions}>All steps completed</Typography>\n            //             <Button onClick={handleReset}>Reset</Button>\n            //         </div>\n            //     ) : (\n            //             <div>\n            //                 <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            //                 <div>\n            //                     <Button\n            //                         disabled={activeStep === 0}\n            //                         onClick={handleBack}\n            //                         className={classes.backButton}\n            //                     >\n            //                         Back\n            //                     </Button>\n            //                     <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n            //                         {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n            //                     </Button>\n            //                 </div>\n            //             </div>\n            //         )}\n            // </div> */}\n        // {/* </div> */}\n    );\n}\n\nexport default StepperList"]},"metadata":{},"sourceType":"module"}